/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package smile.json;

import com.fasterxml.jackson.databind.node.ObjectNode;
import com.google.common.collect.Maps;
import org.checkerframework.checker.units.qual.A;
import org.checkerframework.checker.units.qual.Area;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.util.HashMap;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void smile(@TempDir File dir) throws IOException {
        ObjectNode objectNode = App.SMILE_MAPPER.createObjectNode();
        objectNode.put("hello", "world");
        Path file = dir.toPath().resolve("smile.sml");
        App.SMILE_MAPPER.writeValue(file.toFile(), objectNode);
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        App.decode(byteArrayOutputStream, file.toFile());
        Assertions.assertEquals(App.JSON_MAPPER.readTree(new ByteArrayInputStream(byteArrayOutputStream.toByteArray())), objectNode);
    }

    @Test void json(@TempDir File dir) throws IOException {
        ObjectNode objectNode = App.JSON_MAPPER.createObjectNode();
        objectNode.put("hello", "world");
        Path file = dir.toPath().resolve("json.json");
        App.JSON_MAPPER.writeValue(file.toFile(), objectNode);
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        App.encode(byteArrayOutputStream, file.toFile());
        Assertions.assertEquals(App.SMILE_MAPPER.readTree(new ByteArrayInputStream(byteArrayOutputStream.toByteArray())), objectNode);

    }
}
