/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package smile.json;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import com.fasterxml.jackson.dataformat.smile.SmileFactory;
import com.fasterxml.jackson.dataformat.smile.SmileGenerator;

import java.io.*;

public class App {
    private static ObjectMapper configure(ObjectMapper mapper) {
        mapper.configure(SerializationFeature.INDENT_OUTPUT, true);
        return mapper;
    }
    static final ObjectMapper SMILE_MAPPER = configure(new ObjectMapper(SmileFactory.builder()
            // matching conjure's smile factory generator
            .disable(SmileGenerator.Feature.ENCODE_BINARY_AS_7BIT).build()));
    static final ObjectMapper JSON_MAPPER = configure(new ObjectMapper());

    public static void main(String[] args) {
        if (args.length == 0) {
            printUsage();
            return;
        }
        if (args.length == 1) {
            printUsage();
            return;
        }

        if (args.length > 2) {
            printUsage();
            return;
        }

        File file = new File(args[1]);
        if (!(file.canRead() && file.exists())) {
            printUsage();
            return;
        }

        String command = args[0];

        switch (command) {
            case "-e" -> encode(System.out, file);
            case "-d" -> decode(System.out, file);
            default -> printUsage();
        }

    }

    static void decode(OutputStream out, File file) {
        try {
            JSON_MAPPER.writeValue(out, SMILE_MAPPER.readTree(file));
        } catch (IOException e) {
            throw new RuntimeException("Failed to read smile format for file" + file.toString(), e);
        }
    }

    static void encode(OutputStream out, File file) {
        try  {
            SMILE_MAPPER.writeValue(out, JSON_MAPPER.readTree(file));
        } catch (IOException e) {
            throw new RuntimeException("Failed to read json format for file" + file.toString(), e);
        }
    }

    private static void printUsage() {
        System.out.println("Usage: java -jar smile-json -[e,d] <file>\n -e encodes the target json file into smile\n -d decodes the target file from smile into json");
    }
}
